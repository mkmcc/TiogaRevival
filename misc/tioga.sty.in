% Here are some command to ease the use of pictures produced by Tioga
% within a LaTeX document.


% \tiogafigurefullpage[minwhitespace]{figurename}
%
% \tiogafigurefullpage shows a version of the picture scaled to fit the 
% paper size minus the minwhitespace.  The minwhitespace is the sum of 
% the margins on both sides, top and bottom or left and right. 
% The minwhitespace defaults to 2 inches.
%
\newcommand{\tiogafigurefullpage}[2][2in]{
  \tiogafigurescaledtofit{#2}{\paperwidth - (#1)}{\paperheight - (#1)}}


% \tiogafigurescaledtofit{figurename}{maxwidth}{maxheight}
%
% \tiogafigurescaledtofit shows a version of the picture scaled to fit the
% given width and height while preserving the aspect ratio.
% The 1st arg is the base name for the pdf and txt files.
% The 2nd arg determines the maximum figure width.
% The 3rd arg determines the maximum figure height.
\newcommand{\tiogafigurescaledtofit}[3]{
  \setkeys{Gin}{keepaspectratio=true}
  \resizebox{#2}{#3}{\tiogafigureshow{#1}}}


% \tiogafigurescaled{figurename}{scalefactor}
%
% \tiogafigurescaled shows a scaled version of the picture
% The 1st arg is the base name for the pdf and txt files.
% The 2nd arg determines the scale.
\newcommand{\tiogafigurescaled}[2]{
  \scalebox{#2}{\tiogafigureshow{#1}}}


% \tiogafigurescaledxy{figurename}{xscalefactor}{yscalefactor}
%
% \tiogafigurescaledxy shows a scaled version of the picture where you
% can use different scaling factors in the horizontal and vertical directions.
% The 1st arg is the base name for the pdf and txt files.
% The 2nd arg determines the horizontal scale.
% The 3rd arg determines the vertical scale.
\newcommand{\tiogafigurescaledxy}[3]{
  \scalebox{#2}[#3]{\tiogafigureshow{#1}}}


% \tiogafiguresized{figurename}{figurewidth}{figureheight}
%
% \tiogafiguresized shows a scaled version of the picture, where you
% can specify the actual size you want.  If either length is
% given as !, the one scale factor is used in both directions.
% The 1st arg is the base name for the pdf and txt files.
% The 2nd arg determines the figure width.
% The 3rd arg determines the figure height.
\newcommand{\tiogafiguresized}[3]{
  \resizebox{#2}{#3}{\tiogafigureshow{#1}}}


% \tiogaprefix can be used to set a path for the figure pdf and txt files.
%
\newcommand{\tiogaprefix}{}
% The prefix is initialized to an empty string.  
% To change it, use \renewcommand as in the following example:
% \renewcommand{\tiogaprefix}{plot_out/}


% \tiogafigurecentered{figurename}{targetwidth}{targetheight}
%
% \tiogafigurecentered displays an unscaled figure centered within
% a box of targetwidth *targetheight.
\newcommand{\tiogafigurecentered}[3]{
\vbox to #3{%
\vspace*{\fill}%
\hbox to #2{\hfill%
\tiogafigureshow{#1}%
\hspace*{\fill}}%
\vspace*{\fill}%
}}

% \tiogafigurecentereddebug{figurename}{targetwidth}{targetheight}
%
% \tiogafigurecentereddebug has the same effect as \tiogafigurecentered
% except that the figure is included in a \fbox, which makes it easier
% to track problems.
\newcommand{\tiogafigurecentereddebug}[3]{
\vbox to #3{%
\vspace*{\fill}%
\hbox to #2{\hfill%
\fbox{\tiogafigureshow{#1}}
\hspace*{\fill}}%
\vspace*{\fill}%
}}


% \tiogafigureshow{figurename}
%
% \tiogafigureshow shows the figure and the accompanying text.
% Inside a box, it first creates a picture that includes the pdf
% file with the graphics for the figure, then it includes the text.
% The \tiogaprefix is added at the start of the file names for both.
\newcommand{\tiogafigureshow}[1]{%
  \mbox{\begin{picture}(0,0)(0,0)%
      \put(0,0){\includegraphics{\tiogaprefix#1_figure.pdf}}%
    \end{picture}%
    \input{\tiogaprefix#1_figure.txt}}}

% Commands for text properties:
% Font size (two parameters)
% {sz}{line_sp}, 1st is size of font in points,
% 2nd is line spacing (not used by Tioga)
\newcommand\tiog@fontsize{{10.0}{10pt}}
\newcommand\settiogafontsize[2][10pt]{\renewcommand\tiog@fontsize{{#2}{#1}}}

% Font family
% \rmdefault, \sfdefault, \ttdefault  -- roman, sans serif, typewriter
\newcommand\tiog@fontfamily{\rmdefault}
\newcommand\settiogafontfamily[1]{\renewcommand\tiog@fontfamily{#1}}

% Font series
% \mddefault, \bfdefault -- medium, bold 
\newcommand\tiog@fontseries{\mddefault}
\newcommand\settiogafontseries[1]{\renewcommand\tiog@fontseries{#1}}

% Font shape
% \updefault, \itdefault, \sldefault, \scdefault -- upright, italic, slant, small caps
\newcommand\tiog@fontshape{\updefault}
\newcommand\settiogafontshape[1]{\renewcommand\tiog@fontshape{#1}}

% \SetTiogaFontInfo is called from within the figure.txt file with the TeX
% for the text of the figure. Do not modify this function directly, it
% is way better to use the previous settiogafont* commands.
\newcommand\SetTiogaFontInfo{%
\expandafter\fontsize\tiog@fontsize%
\fontfamily{\tiog@fontfamily}% 
\fontseries{\tiog@fontseries}%
\fontshape{\tiog@fontshape}%
}

% This command is used inside the _figure.txt files. You can use it directly
% as well, if you really want to make sure you get the same fonts. But I
% personnaly doubt it would really come in useful ;-)...
\newcommand\tiogasetfont{\reset@font\SetTiogaFontInfo%
\selectfont}%


% This commands typesets its second argument while sending to the
% standard output successively the width, height and depth of the
% box produced.
%
% These informations are collected when Tioga runs pdflatex.
\newlength{\tiogatempdim}
\newcommand{\tiogameasure}[2]{%
\settowidth{\tiogatempdim}{#2}\typeout{#1[0]=\the\tiogatempdim}%
\settoheight{\tiogatempdim}{#2}\typeout{#1[1]=\the\tiogatempdim}%
\settodepth{\tiogatempdim}{#2}\typeout{#1[2]=\the\tiogatempdim}%
{#2}}
